org: rbrnx
app: wedding-project
# NOTE: update this with your service name
service: wedding-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-domain-manager

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-offline:
    port: 4000
  customDomain:
    - http:
        domainName: ${self:provider.stage}-api.thewatsonwedding.com
        basePath: ''
        endpointType: 'edge'
        stage: ci
        createRoute53Record: true
        securityPolicy: tls_1_2
        apiType: http
        autoDomain: false # False until Domain is transferred
    - http:
        domainName: api.thewatsonwedding.com
        basePath: ''
        endpointType: 'edge'
        stage: prod
        createRoute53Record: true
        securityPolicy: tls_1_2
        apiType: http
        autoDomain: false # False until Domain is transferred

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  profile: terminal-admin
  memorySize: 128
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}

functions:
  unauthenticated:
    handler: src/server.unauthenticatedGQLHandler
    environment:
      SLS_DEBUG: true
    events:
      - http:
          path: api
          method: post
          cors: true
          authorizer: aws_iam

      - http:
          path: api
          method: get
          cors: true
          authorizer: aws_iam
  authenticated:
    handler: src/server.authenticatedGQLHandler
    environment:
      SLS_DEBUG: true
    events:
      - http:
          path: admin
          method: post
          cors: true
          authorizer: aws_iam

      - http:
          path: admin
          method: get
          cors: true
          authorizer: aws_iam

resources:
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
